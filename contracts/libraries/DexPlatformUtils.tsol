pragma ever-solidity ^0.62.0;

import "./DexPlatformTypes.tsol";
import "../DexPlatform.tsol";

import "../structures/IMailState.tsol";

library DexPlatformUtils {
    function buildInitData(
        address _root,
        TvmCell _platformCode,
        uint8 _typeId,
        TvmCell _params
    ) public returns (TvmCell) {
        return tvm.buildStateInit({
            contr: DexPlatform,
            varInit: {
                root: _root,
                typeId: _typeId,
                params: _params
            },
            pubkey: 0,
            code: _platformCode
        });
    }

    function buildMailAccountParams(IMailState.MailUser _user) public returns (TvmCell) {
        TvmBuilder paramsBuilder;
        paramsBuilder.store(_user.addr);
        paramsBuilder.store(_user.pubkey);
        return paramsBuilder.toCell();
    }

    function buildMailBoxParams(uint128 _nonce, IMailState.MailBoxType _boxType) public returns (TvmCell) {
        TvmBuilder paramsBuilder;
        paramsBuilder.store(_nonce);
        paramsBuilder.store(_boxType);
        return paramsBuilder.toCell();
    }

    function expectedMailAccount(
        address _root,
        TvmCell _platformCode,
        IMailState.MailUser _user
    ) public returns (address) {
        TvmCell stateInit = buildInitData(
            _root,
            _platformCode,
            DexPlatformTypes.MailAccount,
            buildMailAccountParams(_user)
        );
        return address(tvm.hash(stateInit));
    }

    function expectedMailBox(
        address _root,
        TvmCell _platformCode,
        uint128 _nonce,
        IMailState.MailBoxType _boxType
    ) public returns (address) {
        TvmCell stateInit = buildInitData(
            _root,
            _platformCode,
            DexPlatformTypes.MailBox,
            buildMailBoxParams(_nonce, _boxType)
        );
        return address(tvm.hash(stateInit));
    }
}
